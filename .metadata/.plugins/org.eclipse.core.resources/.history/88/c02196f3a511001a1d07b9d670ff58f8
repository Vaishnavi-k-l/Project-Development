package com.example.demo;

import java.util.Arrays;

import java.util.Collection;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.example.demo.model.Employee;
import com.example.demo.model.Project;
import com.example.demo.model.ProjectDescStake;
import com.example.demo.model.ProjectMember;
import com.example.demo.model.Subtask;
import com.example.demo.model.Task;
import com.example.demo.service.ProjectManagementServiceClient;
import com.example.demo.service.SubtaskService;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

import ch.qos.logback.core.db.dialect.SybaseSqlAnywhereDialect;

@Component
public class IntegrationClient {
	
	@Autowired
	private ProjectManagementServiceClient projectManagementServiceClient;
	
	@Autowired
	private SubtaskService subatskService;
	
	
	//To get all employees
	public List<Employee> getEmployeeFallback(String fname) {
		System.out.println("=======getEmployeeFallback=========");
		return Arrays.asList();
	}

	@HystrixCommand(fallbackMethod = "getEmployeeFallback")
	public List<Employee> getEmployees(String fname) {
		return this.projectManagementServiceClient.getData(fname);
	}
	
	//******************************************************************
	
	
	
	//To fetch all Project Details
	public List<Project> getProjectDetiailsFallback()
	{
		System.out.println("=======getProjectFallback=========");
		return Arrays.asList();
	}
	
	@HystrixCommand(fallbackMethod = "getProjectDetiailsFallback")
	public List<Project> getProjectDetiails()
	{
		return this.projectManagementServiceClient.getCompletedProjects();
	}
	
	@HystrixCommand(fallbackMethod = "getProjectDetiailsFallback")
	public List<Project> getOngoingProjects()
	{
		return this.projectManagementServiceClient.getOngoingProjects();
	}
	
	
	//Fallback method
	public List<Project> getProjectDetailsFallbackDb(Long theId)
	{
		System.out.println("=======getProjectFallback=========");
		return Arrays.asList();
	}
	
	
	@HystrixCommand(fallbackMethod = "getProjectDetailsFallbackDb")
	public Optional<Project> findProjectByIdSQL(Long theId)
	{
		return this.projectManagementServiceClient.findById(theId);
	}
	
	@HystrixCommand(fallbackMethod = "getProjectDetailsFallbackDb")
	public Optional<ProjectDescStake> findProjectByIdMongo(Long theId)
	{
		return this.projectManagementServiceClient.findByProjId(theId);
	}
	
	//******************************************************************
	
	
	//To access the project memebers
	public List<Project> getProjectMembersFallback(Long theid)
	{
		System.out.println("=======getProjectMembersFallback=========");
		return Arrays.asList();
	}
	
	@HystrixCommand(fallbackMethod = "getProjectMembersFallback")
	public List<ProjectMember> getAllProjectMembers(Long theid)
	{
		return this.projectManagementServiceClient.getAllProjectMember(theid);
	}
	
	//******************************************************************
	
	//To fetch the subtasks
	
	public List<Subtask> getAllSubtasksFallback(Long projectId, Long taskId)
	{
		System.out.println("=======getSubtasksFallback=========");
		return Arrays.asList();
	}
	
	@HystrixCommand(fallbackMethod = "getAllSubtasks")
	public List<Subtask> getAllSubtasks(Long projectId, Long taskId)
	{
		return this.projectManagementServiceClient.getAllSubtasks(projectId, taskId);
	}
	
	//******************************************************************
	
	//To fetch the tasks by projectId
	
	public List<Task> getTaskByProjectIdFallback(Long projectId)
	{
		System.out.println("=======getTasksFallback=========");
		return Arrays.asList();
	}
	
	@HystrixCommand(fallbackMethod = "getTaskByProjectIdFallback")
	public List<Task> getTaskByProjectId(Long projectId)
	{
		return this.projectManagementServiceClient.getTaskByProjectId(projectId);
	}
	
	//Fallback 
	public List<Task> getAllTasksFallbackk()
	{
		System.out.println("=======getTasksFallback=========");
		return Arrays.asList();
	}
	
	
	@HystrixCommand(fallbackMethod = "getAllTasksFallbackk")
	public List<Task> getAllTasks()
	{
		return this.projectManagementServiceClient.getallTasks();
	}
	
	//******************************************************************
	
	//SUBTASK PART
	//Falback method
	public List<Subtask> getAllSubtaksFallbck()
	{
		System.out.println("=======getSubTasksFallback=========");
		return Arrays.asList();
	}
	
	
	@HystrixCommand(fallbackMethod = "getAllSubtaksFallbck")
	public List<Subtask> getAllSubtaks()
	{
		return this.subatskService.getAllSubtasks();
	}
	
	
	public void updateProgressFallback(Long subtaskId, Long progressPercentage, String comment)
	{
		
		System.out.println("=======updateProgressFallback========");
	}
	
	@HystrixCommand(fallbackMethod = "updateProgressFallback")
	public void updateProgress(Long subtaskId, Long progressPercentage, String comment)
	{
		 this.subatskService.updateProgress(subtaskId, progressPercentage, comment);
	}
	
	
}
